from __future__ import print_function
import tensorflow as tf
import numpy as np



#保存

#W=tf.Variable([[1,2,3],[3,4,5]],dtype=tf.float32,name="weights")
#b=tf.Variable([[1,2,3]],dtype=tf.float32,name="biases")

#init = tf.global_variables_initializer()

#saver=tf.train.Saver()

#with tf.Session() as sess:
 #   sess.run(init)
  #  save_path=saver.save(sess,"my_net/save_net.ckpt")
   # print("save to path: ",save_path)



# restore variables
# redefine the same shape and same type for your variables
W = tf.Variable(np.arange(6).reshape((2, 3)), dtype=tf.float32, name="weights")
b = tf.Variable(np.arange(3).reshape((1, 3)), dtype=tf.float32, name="biases")

# not need init step

saver = tf.train.Saver()
save_path=tf.train.latest_checkpoint("my_net/save_net.ckpt")
with tf.Session() as sess:
    sess.run(tf.global_variables_initializer())
    if save_path is not None:
        saver.restore(sess, save_path)
    print("weights:", sess.run(W))
    print("biases:", sess.run(b))
